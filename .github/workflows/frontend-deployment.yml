name: Build and Deploy web app to AWS S3

on:
  push:
    branches: ["master"]
    paths:
      - 'frontend/**'
  pull_request:
    branches: ["master"]
    paths:
      - 'frontend/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read

jobs:
  # Build and deploy frontend
  build:
    name: Build frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Restore cache
        uses: actions/cache@v4
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build
        working-directory: ./frontend
        run: npx --no-install next build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./frontend/out

  deploy:
    name: Deploy frontend
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3 (immutable)
        run: |
          set -e
          aws s3 sync ./dist s3://${{ secrets.AWS_BUCKET }} \
            --exclude "*.html" \
            --cache-control "max-age=31536000, immutable" \
            --delete

      - name: Deploy to S3 (html)
        run: |
          set -e
          aws s3 sync ./dist s3://${{ secrets.AWS_BUCKET }} \
          --exclude "*" \
          --include "*.html" \
          --cache-control "max-age=60, stale-while-revalidate=2592000" \
          --delete